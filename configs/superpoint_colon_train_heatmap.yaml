data:
    dataset: 'Colon' 

    images_path: './datasets/endomapper/33/'  
    camera_mask_path: './datasets/endomapper/camera_mask.png'  
    use_specular_mask: true  
    labels: logs/export/33/ds4_specular_camera_mask_th005_k50_vbm6_nms4_topk600/predictions

    gaussian_label:
        enable: true  
        params:
            GaussianBlur: {sigma: 0.2}

    cache_in_memory: false
    preprocessing:
        downsize: 4 
        # 1 = [960, 1344], 2 = [480, 672], 4 = [240, 336], 8 = [120, 168]
    augmentation:
        photometric:
            enable: true
            primitives: [
                'random_brightness', 'random_contrast', 'additive_speckle_noise',
                'additive_gaussian_noise', 'additive_shade', 'motion_blur'
                ]
            params:
                random_brightness: {max_abs_change: 50}
                random_contrast: {strength_range: [0.5, 1.5]}
                additive_gaussian_noise: {stddev_range: [0, 10]}
                additive_speckle_noise: {prob_range: [0, 0.0035]}
                additive_shade:
                    transparency_range: [-0.5, 0.5]
                    kernel_size_range: [100, 150]
                motion_blur: {max_kernel_size: 3}
        homographic:
            enable: false  #not implemented
    # For standard training; not used by export
    warped_pair:
        enable: true
        params:
            translation: true
            rotation: true
            scaling: true
            perspective: true
            scaling_amplitude: 0.2
            perspective_amplitude_x: 0.2
            perspective_amplitude_y: 0.2
            patch_ratio: 0.85
            max_angle: 1.57
            allow_artifacts: true
        valid_border_margin: 6

front_end_model: 'Train_model_heatmap'  # 'Train_model_frontend'

training:
    workers_train: 8 # 16
    workers_val: 4 # 2

model:
    # name: 'magic_point'
    # name: 'SuperPointNet_pretrained'
    name: 'SuperPointNet_gauss2'
    # name: 'SuperPointNet'
    params: {}
    detector_loss:
        loss_type: 'softmax'

    batch_size: 16 # 32 
    eval_batch_size: 16 # 32 
    learning_rate: 0.0001 # 0.0001
    detection_threshold: 0.005 # 0.015
    lambda_loss: 1 # 1 
    nms: 4
    dense_loss:
        enable: false
        params:
            descriptor_dist: 4 # 4, 7.5
            lambda_d: 800
    sparse_loss:
        enable: true
        params:
            num_matching_attempts: 1000
            num_masked_non_matches_per_match: 100
            lamda_d: 1
            dist: 'cos'
            method: '2d'
    other_settings: 'train 2d, gauss 0.2'
    # subpixel:
        # enable: false
        # params:
        #     subpixel_channel: 2
        # settings: 'predict flow directly'
        # loss_func: 'subpixel_loss_no_argmax' # subpixel_loss, subpixel_loss_no_argmax

retrain: true
reset_iter: true
train_iter: 200000 #200000 # 170000
validation_interval: 2000 # 2000
tensorboard_interval: 500 # 200
save_interval: 5000 # 2000
validation_size: 20

# Pretrained weights
# pretrained: pretrained/superpoint_v1.pth # For original SuperPoint (SuperPointNet_pretrained)
pretrained: 'logs/old/superpoint_coco_heat2_0/checkpoints/superPointNet_170000_checkpoint.pth.tar' # SuperPointNet_gauss2
# pretrained: 'logs/old/magicpoint_synth20/checkpoints/superPointNet_200000_checkpoint.pth.tar' # For SuperPointNet